---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import GrowthBadge from '../components/GrowthBadge.astro';

// Get recent content
const allContent = await Promise.all([
  getCollection('notes'),
  getCollection('projects'),
  getCollection('journals'),
  getCollection('photography'),
  getCollection('collections'),
]).then((collections) => collections.flat());

// Sort by updated date and take the 5 most recent
const recentContent = allContent
  .filter((entry) => !entry.data.draft)
  .sort((a, b) => b.data.updated.getTime() - a.data.updated.getTime())
  .slice(0, 5);

// Helper function to get collection display name
function getCollectionDisplayName(collection: string): string {
  const names: Record<string, string> = {
    notes: 'Note',
    projects: 'Project',
    journals: 'Journal',
    photography: 'Photo Essay',
    collections: 'Collection',
  };
  return names[collection] || collection;
}
---

<BaseLayout title="Home">
  <div class="home">
    <section class="hero">
      <h1>Welcome to my digital garden</h1>
      <p class="lead">
        This is a space where I cultivate ideas, document projects, share
        photography, and collect things I find interesting. Like a garden, some
        thoughts are just seeds ðŸŒ±, others are growing ðŸŒ¿, and some will eventually
        mature into evergreen content ðŸŒ³.
      </p>
    </section>

    <section class="about">
      <h2>About Me</h2>
      <p>
        I'm a product manager by trade, with over 12 years experience working in digital delivery with roles spanning project management, user experience, design thinking and product management. I'm particularly passionate about tech for good, frontier technologies and AI. Outside of work, my interests span: photography (mainly travel and astro), 3D printing, software development, and board gaming.
      </p>
    </section>

    <section class="recent">
      <h2>Recently Updated</h2>
      {
        recentContent.length > 0 ? (
          <ul class="content-list">
            {recentContent.map((entry) => {
              const collection = entry.collection;
              const slug = entry.slug;
              return (
                <li>
                  <a href={`/${collection}/${slug}`}>
                    <div class="content-item">
                      <div class="content-header">
                        <span class="content-title">{entry.data.title}</span>
                        <GrowthBadge growth={entry.data.growth} />
                      </div>
                      <div class="content-meta">
                        <span class="content-type">{getCollectionDisplayName(collection)}</span>
                        <span class="separator">Â·</span>
                        <span class="content-date">
                          {entry.data.updated.toLocaleDateString('en-US', {
                            year: 'numeric',
                            month: 'short',
                            day: 'numeric',
                          })}
                        </span>
                      </div>
                    </div>
                  </a>
                </li>
              );
            })}
          </ul>
        ) : (
          <p class="text-muted">No content yet. Start creating!</p>
        )
      }
    </section>
  </div>
</BaseLayout>

<style>
  .home {
    max-width: var(--measure-wide);
  }

  .hero {
    margin-bottom: var(--space-12);
  }

  .hero h1 {
    margin-top: 0;
    margin-bottom: var(--space-5);
  }

  .lead {
    font-size: var(--text-lg);
    line-height: var(--leading-relaxed);
    color: var(--color-text-muted);
    max-width: var(--measure);
  }

  section {
    margin-bottom: var(--space-10);
  }

  section h2 {
    margin-top: 0;
    margin-bottom: var(--space-5);
  }

  .content-list {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .content-list li {
    margin: 0 0 var(--space-3) 0;
  }

  .content-list a {
    display: block;
    padding: var(--space-3);
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    color: var(--color-text);
    text-decoration: none;
    transition: border-color var(--transition-base),
      transform var(--transition-base);
  }

  .content-list a:hover {
    border-color: var(--color-accent);
    transform: translateY(-2px);
  }

  .content-list a:hover .content-title {
    color: var(--color-accent);
  }

  .content-item {
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
  }

  .content-header {
    display: flex;
    align-items: center;
    gap: var(--space-3);
  }

  .content-title {
    flex: 1;
    font-weight: 500;
    transition: color var(--transition-base);
  }

  .content-meta {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    font-size: var(--text-sm);
    color: var(--color-text-muted);
  }

  .content-type {
    text-transform: capitalize;
    font-weight: 500;
  }

  .separator {
    opacity: 0.5;
  }

  .content-date {
    white-space: nowrap;
  }
</style>

---
// Theme toggle component for dark/light mode
---

<button
  type="button"
  aria-label="Toggle dark mode"
  class="theme-toggle"
>
  <span class="icon-wrapper">
    <svg class="sun-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <circle cx="12" cy="12" r="5"></circle>
      <line x1="12" y1="1" x2="12" y2="3"></line>
      <line x1="12" y1="21" x2="12" y2="23"></line>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
      <line x1="1" y1="12" x2="3" y2="12"></line>
      <line x1="21" y1="12" x2="23" y2="12"></line>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
    </svg>
    <svg class="moon-icon" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
      <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
    </svg>
  </span>
</button>

<script>
  // Set theme on document (theme is already set in head, this just updates it)
  const setTheme = (theme: string): void => {
    document.documentElement.setAttribute('data-theme', theme);
    if (typeof localStorage !== 'undefined') {
      localStorage.setItem('theme', theme);
    }
  };

  // Toggle theme on button click - handle all theme toggle buttons
  const toggles = document.querySelectorAll('.theme-toggle');
  toggles.forEach((toggle) => {
    toggle.addEventListener('click', () => {
      const current = document.documentElement.getAttribute('data-theme');
      const next = current === 'dark' ? 'light' : 'dark';
      setTheme(next);
    });
  });
</script>

<style is:global>
  .theme-toggle {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border: 1px solid var(--color-border);
    background-color: var(--color-bg);
    border-radius: var(--radius-md);
    cursor: pointer;
    transition: background-color var(--transition-base),
      border-color var(--transition-base);
  }

  .theme-toggle:hover {
    background-color: var(--color-surface);
    border-color: var(--color-accent);
  }

  .icon-wrapper {
    position: relative;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .sun-icon,
  .moon-icon {
    position: absolute;
    color: var(--color-text);
  }

  /* Light mode - show sun */
  [data-theme='light'] .sun-icon {
    display: block;
  }

  [data-theme='light'] .moon-icon {
    display: none;
  }

  /* Dark mode - show moon */
  [data-theme='dark'] .sun-icon {
    display: none;
  }

  [data-theme='dark'] .moon-icon {
    display: block;
  }
</style>
